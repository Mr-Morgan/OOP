#include <iostream>
#include "card.h"
#include "hand.h"
#include "genericplayer.h"

/*
                                                    *******
                                                    * HW6 *
                                                    *******

4.  Реализовать класс Player, который наследует от класса GenericPlayer. У этого класса будет 4 метода:

    - `virtual bool IsHitting() const` - реализация чисто виртуальной функции базового класса. Метод спрашивает у пользователя,
      нужна ли ему еще одна карта и возвращает ответ пользователя в виде `true` или `false`.
    - `void Win() const` - выводит на экран имя игрока и сообщение, что он выиграл.
    - `void Lose() const` - выводит на экран имя игрока и сообщение, что он проиграл.
    - `void Push() const` - выводит на экран имя игрока и сообщение, что он сыграл вничью.

5.  Реализовать класс `House`, который представляет дилера. Этот класс наследует от класса `GenericPlayer`. У него есть 2 метода:

    - virtual bool IsHitting() const - метод указывает, нужна ли дилеру еще одна карта. Если у дилера не больше 16 очков, то он
      берет еще одну карту.
    - void FlipFirstCard() - метод переворачивает первую карту дилера.

                                                    *******
                                                    * HW7 *
                                                    *******

3.  Создать класс Deck, который наследует от класса Hand и представляет собой колоду карт. Класс Deck имеет 4 метода:

    - vold Populate() - Создает стандартную колоду из 52 карт, вызывается из конструктора.
    - void Shuffle() - Метод, который тасует карты, можно использовать функцию из алгоритмов STL `random_shuffle`
    - vold Deal (Hand& aHand) - метод, который раздает в руку одну карту
    - void AddltionalCards (GenericPlayer& aGenerlcPlayer) - раздает игроку дополнительные карты до тех пор, пока он может и хочет
      их получать

    ** Обратите внимание на применение полиморфизма. В каких методах применяется этот принцип ООП?

4.  Реализовать класс Game, который представляет собой основной процесс игры. У этого класса будет 3 поля:

    - колода карт,
    - рука дилера,
    - вектор игроков.

    Конструктор класса принимает в качестве параметра вектор имен игроков и создает объекты самих игроков. В конструкторе должна
    создаться колода карт и перемешаться.

    Также класс имеет один метод play(). В этом методе раздаются каждому игроку по две стартовые карты, а первая карта дилера прячется.
    Далее выводится на экран информация о картах каждого игра, в т.ч. и для дилера. Затем раздаются игрокам дополнительные карты. Потом
    показывается первая карта дилера и дилер набирает карты, если ему надо. После этого выводится сообщение, кто победил, а кто проиграл.
    В конце руки всех игроков очищаются.

5.  Написать функцию main() к игре Блекджек. В этой функции вводятся имена игроков. Создается объект класса Game и запускается игровой
    процесс. Предусмотреть возможность повторной игры.
*/

using namespace std;

int main()
{

    return 0;
}//int main()

